/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEXTINPUTPOPUPBASE_HPP
#define TEXTINPUTPOPUPBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/CustomKeyboard.hpp>

class TextInputPopupBase : public touchgfx::Container
{
public:
    TextInputPopupBase();
    virtual ~TextInputPopupBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void handleOkClicked()
    {
        // Override and implement this function in TextInputPopup
    }
    virtual void handleCancelClicked()
    {
        // Override and implement this function in TextInputPopup
    }
    virtual void handleBackgroundClicked()
    {
        // Override and implement this function in TextInputPopup
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ClickListener< touchgfx::Box > background;
    touchgfx::Box popupBox;
    touchgfx::TextAreaWithOneWildcard inputText;
    touchgfx::TextAreaWithOneWildcard titleText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  backgroundClick;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  buttonCancel;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  buttonOk;
    CustomKeyboard customKeyboard;

    /*
     * Wildcard Buffers
     */
    static const uint16_t INPUTTEXT_SIZE = 100;
    touchgfx::Unicode::UnicodeChar inputTextBuffer[INPUTTEXT_SIZE];
    static const uint16_t TITLETEXT_SIZE = 50;
    touchgfx::Unicode::UnicodeChar titleTextBuffer[TITLETEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TextInputPopupBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // TEXTINPUTPOPUPBASE_HPP
