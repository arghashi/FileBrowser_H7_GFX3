/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/ConfirmPopupBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ConfirmPopupBase::ConfirmPopupBase() :
    flexButtonCallback(this, &ConfirmPopupBase::flexButtonCallbackHandler)
{
    setWidth(480);
    setHeight(272);
    background.setPosition(0, 0, 480, 272);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    background.setAlpha(150);
    add(background);

    popupBox.setPosition(50, 70, 380, 132);
    popupBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(popupBox);

    messageText.setPosition(70, 90, 340, 60);
    messageText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    messageText.setLinespacing(0);
    messageText.setWideTextAction(WIDE_TEXT_CHARWRAP);
    messageTextBuffer[0] = 0;
    messageText.setWildcard(messageTextBuffer);
    messageText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C0SO));
    add(messageText);

    backgroundClick.setBoxWithBorderPosition(0, 0, 480, 272);
    backgroundClick.setBorderSize(5);
    backgroundClick.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    backgroundClick.setAlpha(0);
    backgroundClick.setAction(flexButtonCallback);
    backgroundClick.setPosition(0, 0, 480, 272);
    add(backgroundClick);

    btnYes.setBoxWithBorderPosition(0, 0, 100, 40);
    btnYes.setBorderSize(5);
    btnYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btnYes.setText(TypedText(T___SINGLEUSE_CBIN));
    btnYes.setTextPosition(0, 5, 100, 40);
    btnYes.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    btnYes.setAction(flexButtonCallback);
    btnYes.setPosition(111, 202, 100, 40);
    add(btnYes);

    btnNo.setBoxWithBorderPosition(0, 0, 100, 40);
    btnNo.setBorderSize(5);
    btnNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btnNo.setText(TypedText(T___SINGLEUSE_TJWQ));
    btnNo.setTextPosition(0, 5, 100, 40);
    btnNo.setTextColors(touchgfx::Color::getColorFromRGB(255, 252, 252), touchgfx::Color::getColorFromRGB(10, 10, 10));
    btnNo.setAction(flexButtonCallback);
    btnNo.setPosition(270, 202, 100, 40);
    add(btnNo);
}

ConfirmPopupBase::~ConfirmPopupBase()
{

}

void ConfirmPopupBase::initialize()
{

}

void ConfirmPopupBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btnYes)
    {
        //handleYesClicked
        //When btnYes clicked call virtual function
        //Call handleYesClicked
        handleYesClicked();
    }
    if (&src == &btnNo)
    {
        //handleNoClicked
        //When btnNo clicked call virtual function
        //Call handleNoClicked
        handleNoClicked();
    }
    if (&src == &backgroundClick)
    {
        //handleBackgroundClicked
        //When backgroundClick clicked call virtual function
        //Call handleBackgroundClicked
        handleBackgroundClicked();
    }
}
